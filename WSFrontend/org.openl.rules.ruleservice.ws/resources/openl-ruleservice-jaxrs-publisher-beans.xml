<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="swaggerObjectMapperConfiguration"
          class="org.openl.rules.ruleservice.publish.jaxrs.swagger.jackson.SwaggerObjectMapperConfigurationBean"/>

    <bean id="jaxrsOpenApiObjectMapperConfiguration"
          class="org.openl.rules.ruleservice.publish.jaxrs.swagger.jackson.OpenApiObjectMapperConfigurationBean"/>

    <bean id="jaxrsSwaggerAndOpenApiObjectMapperParent"
          class="org.openl.rules.ruleservice.publish.jaxrs.swagger.SchemaJacksonObjectMapperFactoryBean"
          scope="prototype" abstract="true"
          depends-on="swaggerObjectMapperConfiguration,jaxrsOpenApiObjectMapperConfiguration">
        <property name="overrideTypesAsString" value="${ruleservice.databinding.rootClassNames}"/>
        <property name="supportVariations" value="${ruleservice.isSupportVariations}"/>
        <property name="defaultTypingMode" value="${ruleservice.jackson.defaultTypingMode}"/>
        <property name="simpleClassNameAsTypingPropertyValue"
                  value="${ruleservice.jackson.simpleClassNameAsTypingPropertyValue}"/>
        <property name="typingPropertyName" value="${ruleservice.jackson.typingPropertyName}"/>
        <property name="xlsModuleOpenClass" ref="xlsModuleOpenClassInProcess"/>
        <property name="rulesDeploy" ref="rulesDeployInProcess"/>
    </bean>

    <bean id="jaxrsProjectJacksonObjectMapperFactoryBean"
          class="org.openl.rules.serialization.ProjectJacksonObjectMapperFactoryBean" scope="prototype">
        <property name="overrideTypesAsString" value="${ruleservice.databinding.rootClassNames}"/>
        <property name="caseInsensitiveProperties" value="${ruleservice.jackson.caseInsensitiveProperties}"/>
        <property name="defaultDateFormatAsString" value="${ruleservice.jackson.defaultDateFormat}"/>
        <property name="failOnUnknownProperties" value="${ruleservice.jackson.failOnUnknownProperties}"/>
        <property name="defaultTypingMode" value="${ruleservice.jackson.defaultTypingMode}"/>
        <property name="supportVariations" value="${ruleservice.isSupportVariations}"/>
        <property name="serializationInclusion" value="${ruleservice.jackson.serializationInclusion}"/>
        <property name="simpleClassNameAsTypingPropertyValue"
                  value="${ruleservice.jackson.simpleClassNameAsTypingPropertyValue}"/>
        <property name="typingPropertyName" value="${ruleservice.jackson.typingPropertyName}"/>
        <property name="polymorphicTypeValidation" value="true"/>
        <property name="xlsModuleOpenClass" ref="xlsModuleOpenClassInProcess"/>
        <property name="rulesDeploy" ref="rulesDeployInProcess"/>
    </bean>

    <bean id="jaxrsServiceConfigurationResolveMethodParameterNamesFactoryBean"
          class="org.openl.rules.ruleservice.databinding.ServiceConfigurationBooleanFactoryBean" scope="prototype">
        <property name="propertyName" value="jaxrs.resolveMethodParameterNames"/>
        <property name="defaultValue" value="${ruleservice.jaxrs.resolveMethodParameterNames:true}"/>
        <property name="serviceDescription" ref="serviceDescriptionInProcess"/>
    </bean>

    <bean id="jaxrsSwaggerObjectMapperFactory" parent="jaxrsSwaggerAndOpenApiObjectMapperParent" scope="prototype">
        <property name="objectMapperFactory">
            <bean class="org.openl.rules.ruleservice.publish.jaxrs.swagger.jackson.SwaggerObjectMapperFactory"/>
        </property>
    </bean>

    <bean id="jaxrsSwaggerObjectMapper" factory-bean="jaxrsSwaggerObjectMapperFactory"
          factory-method="createJacksonObjectMapper" scope="prototype"/>

    <bean id="jaxrsOpenApiObjectMapperFactory" parent="jaxrsSwaggerAndOpenApiObjectMapperParent" scope="prototype">
        <property name="objectMapperFactory">
            <bean class="org.openl.rules.ruleservice.publish.jaxrs.swagger.jackson.OpenApiObjectMapperFactory"/>
        </property>
    </bean>

    <bean id="jaxrsOpenApiObjectMapper" factory-bean="jaxrsOpenApiObjectMapperFactory"
          factory-method="createJacksonObjectMapper" scope="prototype"/>

    <bean id="jaxrsTextPlainDateMessageBodyWriter" scope="prototype"
          class="org.openl.rules.ruleservice.databinding.TextPlainDateMessageProvider">
        <property name="objectMapper">
            <bean factory-bean="jaxrsProjectJacksonObjectMapperFactoryBean" factory-method="createJacksonObjectMapper"/>
        </property>
    </bean>

    <bean id="jaxrsJSONProvider" class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider" scope="prototype">
        <constructor-arg>
            <bean factory-bean="jaxrsProjectJacksonObjectMapperFactoryBean" factory-method="createJacksonObjectMapper"/>
        </constructor-arg>
    </bean>

    <bean id="jaxrsWebApplicationExceptionMapper" class="org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper">
        <property name="addMessageToResponse" value="true"/>
    </bean>

    <bean id="jaxrs200StatusOutInterceptor"
          class="org.openl.rules.ruleservice.publish.jaxrs.JAXRS200StatusOutInterceptor">
        <property name="enabled" value="${ruleservice.jaxrs.responseStatusAlwaysOK}"/>
    </bean>

    <bean id="wadlGenerator" class="org.apache.cxf.jaxrs.model.wadl.WadlGenerator" scope="prototype">
        <property name="linkAnyMediaTypeToXmlSchema" value="true"/>
        <property name="supportCollections" value="false"/>
        <property name="extraClasses">
            <bean class="org.openl.rules.ruleservice.databinding.SetToListOfClassesFactoryBean">
                <property name="setOfClassNames">
                    <bean class="org.openl.rules.ruleservice.databinding.ServiceRootClassNamesBindingFactoryBean">
                        <property name="overrideTypesAsString" value="${ruleservice.databinding.rootClassNames}"/>
                        <property name="serviceDescription" ref="serviceDescriptionInProcess"/>
                        <property name="openLService" ref="openLServiceInProcess"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="jaxrsExceptionMapper" class="org.openl.rules.ruleservice.publish.jaxrs.JAXRSExceptionMapper"/>

    <bean id="jaxrsServiceServerPrototype" class="org.apache.cxf.jaxrs.JAXRSServerFactoryBean" scope="prototype">
        <property name="features">
            <list>
                <bean class="org.openl.rules.ruleservice.storelogdata.LoggingFeature">
                    <property name="loggingEnabled" value="#{${ruleservice.logging.enabled}}"/>
                </bean>
            </list>
        </property>
        <property name="outFaultInterceptors">
            <list>
                <ref bean="jaxrs200StatusOutInterceptor"/>
            </list>
        </property>
        <property name="outInterceptors">
            <list>
                <ref bean="jaxrs200StatusOutInterceptor"/>
            </list>
        </property>
        <property name="providers">
            <list>
                <ref bean="jaxrsExceptionMapper"/>
                <ref bean="wadlGenerator"/>
                <ref bean="jaxrsJSONProvider"/>
                <ref bean="jaxrsTextPlainDateMessageBodyWriter"/>
                <ref bean="jaxrsWebApplicationExceptionMapper"/>
                <bean class="org.openl.rules.ruleservice.databinding.TextPlainStringMessageProvider"/>
            </list>
        </property>
        <property name="bus" ref="cxf"/>
    </bean>

    <!-- Initializes OpenL Engine instances according to Rule Services configuration description and calls RuleServicePublisher
        to expose corresponding web service -->
    <!-- Exposes web services. -->
    <bean id="jaxrsServiceEnhancer" class="org.openl.rules.ruleservice.publish.jaxrs.JAXRSOpenLServiceEnhancer"
          scope="prototype">
        <property name="resolveMethodParameterNames"
                  ref="jaxrsServiceConfigurationResolveMethodParameterNamesFactoryBean"/>
    </bean>

    <bean id="jaxrsServicesRuleServicePublisher" class="org.openl.rules.ruleservice.publish.JAXRSRuleServicePublisher">
        <property name="swaggerPrettyPrint" value="${ruleservice.jaxrs.swagger.prettyprint}"/>
    </bean>

</beans>
