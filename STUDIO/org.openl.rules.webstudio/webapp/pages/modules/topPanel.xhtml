<?xml version="1.0" encoding="UTF-8"?>
<ui:composition
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:a4j="http://richfaces.org/a4j">

    <c:set var="contextPath" value="#{facesContext.externalContext.request.contextPath}" />
    <c:set var="rProject" value="#{studio.currentProject}" />
    <c:set var="project" value="#{studio.currentProjectDescriptor}" />
    <c:set var="module" value="#{studio.currentModule}" />

    <h:panelGroup rendered="#{!empty rProject and studio.model.editable and empty module}">
        <ui:include src="/pages/modules/updateProject.xhtml" />
    </h:panelGroup>
    <h:panelGroup rendered="#{!empty rProject and empty module}">
        <ui:include src="/pages/modules/exportProject.xhtml" />
    </h:panelGroup>

    <h:panelGroup rendered="#{!empty module and studio.model.editable}">
        <ui:include src="/pages/modules/updateModule.xhtml" />
    </h:panelGroup>
    <h:panelGroup rendered="#{!empty module}">
        <ui:include src="/pages/modules/exportModule.xhtml" />
    </h:panelGroup>

    <h:panelGroup rendered="#{studio.canRedeploy}">
        <ui:include src="/pages/modules/repository/modal/smartEditorRedeploy.xhtml" />
    </h:panelGroup>

    <h:panelGroup>
        <ui:include src="/pages/modules/repository/modal/shareProject.xhtml"/>
    </h:panelGroup>

    <h:panelGroup rendered="#{!empty rProject and rProject.openedForEditing and studio.model.editable}">
        <ui:param name="artefact" value="#{rProject}"/>
        <ui:include src="/pages/modules/saveRevision.xhtml" />
        <ui:include src="/pages/modules/resolveConflict.xhtml" />
        <ui:include src="/pages/modules/uploadConflictResolution.xhtml" />
        <ui:include src="/pages/modules/compareRevisions.xhtml" />
        <ui:include src="/pages/modules/compareTextFiles.xhtml" />
    </h:panelGroup>

    <h:panelGroup rendered="#{!empty rProject and copyBean.canCreate}">
        <ui:include src="/pages/modules/copyProject.xhtml" />
        <ui:include src="/pages/modules/tags/createProjectTags.xhtml" />
        <ui:include src="/pages/modules/repository/modal/selectFolder.xhtml" />
    </h:panelGroup>

    <h:panelGroup rendered="#{studio.canMerge}">
        <ui:include src="/pages/modules/repository/modal/mergeBranches.xhtml">
            <ui:param name="menu" value="rules" />
        </ui:include>
    </h:panelGroup>

    <h:form id="headerForm" prependId="false" styleClass="navbar">
        <div class="breadcrumbs" style="margin-right:15px">
            <a href="#{contextPath}/" class="changes-listener">Projects</a>
            <h:panelGroup rendered="#{!empty rProject.name}">
            <span class="delimeter"></span>
            <span class="dropdown" id="breadcrumbs-project">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#" title="#{project.name}">
                    #{project.name}
                </a>
                <ul class="dropdown-menu" role="menu">
                    <li class="nav-header">Current Project</li>
                    <li><a href="#{utils.toUrl(rProject.repository.id, rProject.name)}">#{project.name}</a></li>
                    <h:panelGroup rendered="#{studio.allProjects.size() > 1}">
                        <li class="divider"></li>
                        <li class="nav-header">All Projects</li>
                        <ui:repeat value="#{studio.allProjects}" var="pr">
                            <ui:param name="prj" value="#{studio.getProjectByName(pr.name)}"/>
                            <h:panelGroup rendered="#{pr.name != project.name}">
                                <li><a href="#{utils.toUrl(prj.repository.id, pr.name)}">#{pr.name}</a></li>
                            </h:panelGroup>
                        </ui:repeat>
                    </h:panelGroup>
                </ul>
            </span>
            </h:panelGroup>
            <h:panelGroup rendered="#{!empty rProject.name and studio.supportsBranches}">
                <span class="delimeter"></span>
                <span class="dropdown" id="breadcrumbs-module">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" title="Branch: #{studio.projectBranch}">
                        #{studio.projectBranch}
                    </a>
                    <ul class="dropdown-menu" role="menu">
                        <li class="nav-header">Current Branch</li>
                        <li><a href="#{utils.toUrl(rProject.repository.id, rProject.name)}/[#{utils.encode(studio.projectBranch)}]">#{studio.projectBranch}</a></li>
                        <h:panelGroup rendered="#{studio.projectBranches.size() > 1}">
                            <li class="divider"></li>
                            <li class="nav-header">All Branches</li>
                            <ui:repeat value="#{studio.projectBranches}" var="branch">
                                <h:panelGroup rendered="#{branch != studio.projectBranch}">
                                    <li><a href="#{utils.toUrl(rProject.repository.id, rProject.name)}/[#{utils.encode(branch)}]" onclick="return canOpenOtherBranch();">#{branch}</a></li>
                                </h:panelGroup>
                            </ui:repeat>
                        </h:panelGroup>
                    </ul>
                </span>
            </h:panelGroup>
            <h:panelGroup rendered="#{!empty module.name}">
            <span class="delimeter"></span>
            <span class="dropdown" id="breadcrumbs-module">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#" title="#{module.name}">
                    #{module.name}
                </a>
                <ul class="dropdown-menu" role="menu">
                    <li class="nav-header">Current Module</li>
                    <li><a href="#{utils.toUrl(rProject.repository.id, rProject.name, module.name)}">#{module.name}</a></li>
                    <h:panelGroup rendered="#{studio.currentProjectDescriptor.modules.size() > 1}">
                    <li class="divider"></li>
                    <li class="nav-header">All Modules</li>
                    <ui:repeat value="#{studio.currentProjectDescriptor.modules}" var="m">
                        <h:panelGroup rendered="#{m.name != module.name}">
                        <li><a href="#{utils.toUrl(rProject.repository.id, rProject.name, m.name)}">#{m.name}</a></li>
                        </h:panelGroup>
                    </ui:repeat>
                    </h:panelGroup>
                </ul>
            </span>
            </h:panelGroup>
            <a id="refreshBtn" onclick="forceReload();" title="Refresh" class="imageButton changes-listener"
               style="background:url('webresource/images/refresh.png');padding:5px 16px;margin: 0 11px 0 7px" />
        </div>
        <div class="navbar-inner">
            <a4j:ajax oncomplete="ws.nav.reload(true)">
                <h:commandLink styleClass="changes-listener primary" onclick="invokeManualCompile(); return false;"
                               id="verifyButton"
                               title="Verify" value="Verify"
                               rendered="#{!empty module and studio.manualCompileNeeded}" />
                <h:commandLink styleClass="changes-listener" onclick="openSaveDialog(); return false;" value="Save"
                               id="saveProjectButton"
                               title="Save the project changes in Design Repository as a new revision and make it available for editing to other users"
                               rendered="#{!empty rProject and rProject.openedForEditing and rProject.modified and studio.model.editable}" />
                <h:commandLink styleClass="changes-listener" onclick="openMergeBranchesDialog('#{rProject.repository.id}', '#{rProject.name}'); return false;"
                               value="Sync"
                               title="Synchronize updates"
                               rendered="#{studio.canMerge}" />
                <h:commandLink styleClass="changes-listener" onclick="openShareProjectDialog('#{rProject.repository.id}', '#{rProject.name}'); return false;" value="Share" title="Share"/>
                <h:commandLink styleClass="changes-listener" onclick="openSmartRedeployDialogFromEditor('#{rProject.repository.id}', '#{rProject.name}'); return false;" value="Deploy"
                               id="deployProjectButton"
                               title="Deploy the project"
                               rendered="#{studio.canRedeploy}">
                </h:commandLink>
                <h:commandLink styleClass="changes-listener" onclick="openCopyProjectDialog('#{rProject.repository.id}', '#{rProject.name}'); return false;"
                               id="copyProjectButton"
                               value="Copy" title="Copy project"
                               rendered="#{!empty rProject and copyBean.canCreate}" />
                <h:commandLink onclick="if (!canOverwriteRevision()) return false; openUpdateProjectDialog();return false;"
                               id="updateProjectButton"
                               title="Update project" value="Update"
                               rendered="#{!empty rProject and studio.model.editable and empty module}" />
                <h:commandLink styleClass="changes-listener" onclick="openExportProjectDialog('#{rProject.repository.id}', '#{rProject.name}'); return false;"
                               id="exportProjectButton"
                               title="Download the project as a zip archive" value="Export"
                               rendered="#{!empty rProject and empty module}" />
                <h:commandLink styleClass="changes-listener" onclick="if (!canOverwriteRevision()) return false; openUpdateModuleDialog(); return false;"
                               id="updateModuleButton"
                               title="Update module" value="Update"
                               rendered="#{!empty module and studio.model.editable}" />
                <h:commandLink styleClass="changes-listener" onclick="openExportModuleDialog('#{rProject.repository.id}', '#{rProject.name}', '#{studio.currentModule.rulesRootPath.path}'); return false;"
                               id="exportModuleButton"
                               title="Export module" value="Export"
                               rendered="#{!empty module}" />
            </a4j:ajax>

            <h:panelGroup rendered="#{!empty module and treeBean.projectTestsCount > 0 and treeBean.canRun}">
            <h:outputLink value="#{studio.url('test/test')}" title="Run Tests"
                styleClass="navbar-dropdown" onclick="test(event, '#{studio.url('test/test')}')">Test <span style="color:#888;padding: 1px 4px; border: 1px solid #ddd">#{treeBean.projectTestsCount}</span></h:outputLink>
            <span class="dropdown dropdown-form">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#"><b class="caret" /></a>
                <ul id="testSettings" class="dropdown-menu" role="menu" style="margin-left:-65px">
                    <li onclick="event.stopPropagation()">
                        <span tabindex="-1">
                            <span>Tests per page</span>
                            <h:selectOneMenu id="pp" value="#{studio.testsPerPage}">
                                <f:selectItem itemLabel="1" itemValue="1" />
                                <f:selectItem itemLabel="5" itemValue="5" />
                                <f:selectItem itemLabel="20" itemValue="20" />
                                <f:selectItem itemLabel="All" itemValue="-1" />
                            </h:selectOneMenu>
                        </span>
                    </li>
                    <li onclick="event.stopPropagation()">
                        <span tabindex="-1" title="Show only failed test cases">
                            <span>Failures Only</span>
                            <input name="failuresOnly" type="checkbox"
                                onclick="$j('#failuresSetting').toggle(this.checked)"
                                value="true" checked="#{studio.testsFailuresOnly ? 'checked' : ''}"
                                style="vertical-align:-2px;margin:-4px" />
                        </span>
                    </li>
                    <li id="failuresSetting" class="#{!studio.testsFailuresOnly ? 'hidden' : ''}"
                        onclick="event.stopPropagation()">
                        <span tabindex="-1">
                            <span>Failures per test</span>
                            <h:selectOneMenu id="failures" value="#{studio.testsFailuresPerTest}">
                                <f:selectItem itemLabel="1" itemValue="1" />
                                <f:selectItem itemLabel="5" itemValue="5" />
                                <f:selectItem itemLabel="20" itemValue="20" />
                                <f:selectItem itemLabel="All" itemValue="-1" />
                            </h:selectOneMenu>
                        </span>
                    </li>
                    <li onclick="event.stopPropagation()">
                        <span tabindex="-1" title="Display the full result of running test cases, not only values which are being tested">
                            <span>Compound Result</span>
                            <input name="complexResult" type="checkbox"
                                value="true" checked="#{studio.showComplexResult ? 'checked' : ''}"
                                style="vertical-align:-2px;margin:-4px" />
                        </span>
                    </li>
                    <li class="divider"></li>
                    <li>
                        <span style="padding:6px 18px 7px">
                            <a href="#{studio.url('test/test')}" class="button" onclick="test(event, '#{studio.url('test/test')}')">Test</a>
                            <a href="#" id="downloadTest" class="button" onclick="downloadTest(event)">Test into File</a>
                        </span>
                    </li>
                </ul>
            </span>
            <span class="delimeter"></span>
            </h:panelGroup>

            <h:panelGroup rendered="#{!empty module and studio.model.canCreateTable}">
                <a href="#{studio.url('create/index')}" title="Create new table" class="primary" onclick="return canOverwriteRevision();">Create Table</a>
                <span class="delimeter"></span>
            </h:panelGroup>

            <h:panelGroup id="topMorePanel" class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                    More<b class="caret"></b>
                </a>
                <ul class="dropdown-menu" role="menu">
                    <h:panelGroup rendered="#{!empty project}">
                        <li><a tabindex="-1" href="#{utils.toUrl(rProject.repository.id, rProject.name)}?page=revisions&amp;"
                               title="Show project revisions">Revisions</a></li>
                        <h:panelGroup rendered="#{empty module}">
                            <li class="divider"></li>
                        </h:panelGroup>
                    </h:panelGroup>
                    <h:panelGroup rendered="#{!empty module and studio.model.canEditProject}">
                        <li><a tabindex="-1" id="topRevertLink" href="#{studio.url('changes')}"
                               onclick="return canOverwriteRevision();"
                               title="Compare and/or roll back module changes against a specific date">Local Changes</a></li>
                        <li class="divider"></li>
                    </h:panelGroup>
                    <h:panelGroup rendered="#{!empty module and studio.model.projectCompiledSuccessfully}">
                    <li><a tabindex="-1" href="#{studio.url('dependencies')}">Table Dependencies</a></li>
                    </h:panelGroup>
                    <li><a tabindex="-1" target="_blank"
                        onclick="topPanelCompareWindowOpen(); return false;"
                        href="#">Compare Excel files</a></li>
                </ul>
                <a4j:jsFunction name="topPanelCompareWindowOpen" action="#{uploadExcelDiffController.reset()}"
                                oncomplete="window.open('#{contextPath}/faces/pages/modules/compare.xhtml','Compare','width=1240,height=700,screenX=50,screenY=100,resizable=yes,scrollbars=yes,status=yes');"/>
            </h:panelGroup>
        </div>

        <h:panelGroup rendered="#{!empty module}">
        <div class="navbar-inner right">
            <span class="dropdown">
            </span>
            <c:choose>
                <c:when test="#{studio.changeableModuleMode}">
                    <span class="dropdown" style="text-align: right">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            #{studio.model.singleModuleMode ? "Single-module" : "Multi-module"}<b class="caret"></b>
                        </a>
                        <ul class="dropdown-menu pull-right" role="menu">
                            <h:panelGroup rendered="#{!empty rProject}">
                                <li><a class="changes-listener" onclick="useSingleModuleMode(); return false;" href="#">Single-module mode</a></li>
                            </h:panelGroup>
                            <li><a class="changes-listener" onclick="useMultiModuleMode(); return false;" href="#">Multi-module mode</a></li>
                        </ul>
                    </span>
                </c:when>
                <c:otherwise>
                    <a href="javascript:void(0)">#{studio.model.singleModuleMode ? "Single-module" : "Multi-module"}</a>
                </c:otherwise>
            </c:choose>
        </div>
        </h:panelGroup>

        <a4j:jsFunction name="invokeManualCompile" action="#{studio.invokeManualCompile()}" onbegin="ws.ui.showLoader();" oncomplete="ws.nav.reload(true);ws.ui.hideLoader();" />
        <a4j:jsFunction name="forceReload" action="#{mainBean.reload}" onbegin="ws.ui.showLoader();" oncomplete="ws.nav.reload(true);ws.ui.hideLoader();" />
        <a4j:jsFunction name="useSingleModuleMode" action="#{studio.model.useSingleModuleMode}" onbegin="ws.ui.showLoader();" oncomplete="ws.nav.reload(true);ws.ui.hideLoader();" />
        <a4j:jsFunction name="useMultiModuleMode" action="#{studio.model.useMultiModuleMode}" onbegin="ws.ui.showLoader();" oncomplete="ws.nav.reload(true);ws.ui.hideLoader();" />

    </h:form>

    <div style="float:right;position:absolute;margin-right:20px;display:inline-block;top:-31px;left:234px">
        <h:panelGroup rendered="#{!empty rProject and !empty module and studio.model.projectCompiledSuccessfully}">
            <ui:include src="/pages/modules/searchForm.xhtml" />
        </h:panelGroup>
    </div>

    <script>
        //<![CDATA[
        // TODO Add to namespace
        function getGlobalTestQuery() {
            var query = $j("#testSettings").find("select,input").serialize();
            jQuery('#testSettings').find('input[type=checkbox]:not(:checked)').each(function () {
                query += '&' + this.name + '=false';
            });
            return query;
        }

        function test(e, testUrl) {
            e.preventDefault();
            var query = getGlobalTestQuery();
            ws.nav.go(testUrl + "?" + query, true);
        }

        function downloadTest(e) {
            e.preventDefault();
            var query = getGlobalTestQuery();
            ws.nav.download("#{contextPath}/web/test/testcase?" + query);
        }

        function canOverwriteRevision() {
            var confirmNeeded = #{studio.model.confirmOverwriteNewerRevision};
            return !confirmNeeded || confirm("#{msg['ws.project.warning.version.old']}");
        }

        function canOpenOtherBranch() {
            var confirmNeeded = #{studio.currentProject.status == 'EDITING'};
            if (!confirmNeeded) {
                return true;
            }
            return confirm("#{msg['ws.project.warning.other.branch']}");
        }

        //]]>
    </script>

</ui:composition>
