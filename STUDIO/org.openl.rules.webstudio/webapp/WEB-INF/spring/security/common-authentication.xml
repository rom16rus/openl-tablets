<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- ======================== AUTHENTICATION ======================= -->

    <bean id="securityContextPersistenceFilter"
          class="org.springframework.security.web.context.SecurityContextPersistenceFilter"/>

    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <constructor-arg name="providers" ref="authenticationProviders"/>
        <!-- Needed for SAML. Without credentials it's not possible to make global single sign out -->
        <property name="eraseCredentialsAfterAuthentication" value="false"/>
    </bean>

    <bean id="basicAuthenticationFilter"
          class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <constructor-arg name="authenticationManager" ref="authenticationManager"/>
        <constructor-arg name="authenticationEntryPoint" ref="basicAuthenticationEntryPoint"/>
    </bean>

    <bean id="basicAuthenticationEntryPoint"
          class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
        <property name="realmName" value="WebStudio Realm"/>
    </bean>

    <bean id="restBasicAuthenticationFilter"
          class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <constructor-arg name="authenticationManager" ref="authenticationManager"/>
        <constructor-arg name="authenticationEntryPoint" ref="restBasicAuthenticationEntryPoint"/>
    </bean>

    <bean name="restBasicAuthenticationEntryPoint" class="org.openl.rules.rest.RestBasicAuthenticationEntryPoint">
        <property name="realmName" value="WebStudio Realm"/>
    </bean>

    <bean id="restExceptionTranslationFilter"
          class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <constructor-arg name="authenticationEntryPoint" ref="restBasicAuthenticationEntryPoint"/>
    </bean>

    <bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <constructor-arg name="authenticationEntryPoint" ref="authenticationEntryPoint"/>
        <constructor-arg name="requestCache" ref="httpSessionRequestCache"/>
    </bean>

    <bean id="httpSessionRequestCache" class="org.springframework.security.web.savedrequest.HttpSessionRequestCache">
        <!-- Don't redirect to these pages after login -->
        <property name="requestMatcher" ref="excludingRequestMatcher"/>
    </bean>

    <bean id="excludingRequestMatcher" class="org.openl.rules.webstudio.security.ExcludingRequestMatcher">
        <property name="matchers">
            <list>
                <bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
                    <!-- accessDenied.xhtml, login.xhtml, sessionExpired.xhtml -->
                    <constructor-arg value="/**/pages/*.xhtml"/>
                </bean>
            </list>
        </property>
    </bean>

    <!-- ======================== Logout ========================== -->

    <bean id="logoutUrlProvider" class="org.openl.rules.webstudio.security.LogoutUrlProvider">
        <constructor-arg ref="logoutUrl"/>
    </bean>

    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg name="logoutSuccessUrl" ref="logoutSuccessUrl"/>
        <constructor-arg name="handlers" ref="logoutHandlers"/>
        <property name="filterProcessesUrl" ref="logoutUrl"/>
    </bean>


    <bean id="sessionAuthenticationStrategy" class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
        <constructor-arg name="sessionRegistry" ref="sessionRegistry"/>
    </bean>
</beans>
