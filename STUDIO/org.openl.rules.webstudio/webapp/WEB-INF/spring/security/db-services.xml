<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="classpath:META-INF/standalone/spring/security-hibernate-beans.xml"/>

    <!-- ======================== DB Services ========================== -->

    <context:component-scan base-package="org.openl.rules.webstudio.service"/>

    <bean id="tagTypeService" class="org.openl.rules.webstudio.service.TagTypeService">
        <constructor-arg name="tagTypeDao" ref="openlTagTypeDao"/>
        <constructor-arg name="tagDao" ref="openlTagDao"/>
    </bean>

    <bean id="tagService" class="org.openl.rules.webstudio.service.TagService">
        <property name="tagDao" ref="openlTagDao"/>
    </bean>

    <bean id="projectService" class="org.openl.rules.webstudio.service.OpenLProjectService">
        <property name="projectDao" ref="openLProjectDao"/>
    </bean>

    <bean id="projectGroupingService" class="org.openl.rules.webstudio.service.ProjectGroupingService">
        <property name="userSettingManagementService" ref="userSettingManagementService"/>
    </bean>

    <bean id="tagTemplateService" class="org.openl.rules.webstudio.service.TagTemplateService">
        <property name="tagTemplateDao" ref="tagTemplateDao"/>
        <property name="tagTypeDao" ref="openlTagTypeDao"/>
        <property name="tagDao" ref="openlTagDao"/>
    </bean>

    <bean id="userSettingManagementService" class="org.openl.rules.webstudio.service.UserSettingManagementService">
        <constructor-arg name="userSettingDao" ref="openlUserSettingDao"/>
        <constructor-arg name="propertyResolver" ref="environment"/>
    </bean>

    <bean id="adminUsersInitializer" class="org.openl.rules.webstudio.service.AdminUsers" init-method="init"/>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg value="${webstudio.bcrypt.strength}"/>
    </bean>

    <!-- ========================== Internal users authentication =============================== -->
    <bean id="daoAuthenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="passwordEncoder" ref="passwordEncoder"/>
        <property name="userDetailsService">
            <bean class="org.openl.rules.webstudio.service.UserInfoUserDetailsServiceImpl">
                <constructor-arg name="userDao" ref="openlUserDao"/>
                <constructor-arg name="adminUsersInitializer" ref="adminUsersInitializer"/>
                <constructor-arg name="authoritiesMapper">
                    <bean class="org.openl.rules.webstudio.security.OpenLUserDetailsService">
                        <constructor-arg name="userManagementService" ref="userManagementService"/>
                        <constructor-arg name="groupManagementService" ref="groupManagementService"/>
                        <constructor-arg name="groupsAreManagedInStudio" value="true"/>
                        <constructor-arg name="adminUsersInitializer" ref="adminUsersInitializer"/>
                        <constructor-arg name="externalGroupService" ref="externalGroupService"/>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="hideUserNotFoundExceptions" value="false"/>
    </bean>

    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
</beans>
